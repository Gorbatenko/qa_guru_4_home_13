plugins {
    id 'java-library'
    id 'io.qameta.allure' version '2.8.1'
}

repositories {
    maven {url = "https://dl.bintray.com/qameta/maven-unstable/"}
    mavenCentral()
}

def allureVersion = '2.13.8',
    selenideVersion = '5.20.1',
    junitVersion = '5.7.0',
    javafakerVersion = '1.0.2',
    ownerVersion = '1.0.12',
    aspectjweaverVersion = '1.9.6',
    allureEEJunitPlatform = '3.28.2'

allure {
    autoconfigure = true
    version = allureVersion

    useJUnit5 {
        version = allureVersion
    }
}

dependencies {
    testImplementation(
            "com.codeborne:selenide:$selenideVersion",
            "io.qameta.allure:allure-java-commons:$allureVersion",
            "io.qameta.allure:allure-selenide:$allureVersion",
            "org.junit.jupiter:junit-jupiter-api:$junitVersion",
            "com.github.javafaker:javafaker:$javafakerVersion",
            "org.aeonbits.owner:owner:$ownerVersion",
            "org.aspectj:aspectjweaver:$aspectjweaverVersion",
            "io.qameta.allure:allure-ee-junit-platform:$allureEEJunitPlatform"
    )
    testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:$junitVersion"
}

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

tasks.withType(Test) {
    System.setProperty("junit.jupiter.extensions.autodetection.enabled", "true")
    systemProperties += System.properties
}

test {
    useJUnitPlatform()
    reports {
        junitXml.enabled = false
        html.enabled = true
    }
}

task main_page_test(type: Test) {
    useJUnitPlatform {
        includeTags 'mainPage'
    }
}

task login_page_test(type: Test) {
    useJUnitPlatform {
        includeTags 'loginPage'
    }
}